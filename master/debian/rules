#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# scons flags
SCONS_FLAGS=INPUT_PLUGINS=csv,gdal,geojson,topojson,ogr,osm,postgis,raster,shape,sqlite \
CC=/usr/bin/clang \
CXX=/usr/bin/clang++ \
CUSTOM_CXXFLAGS="-fvisibility-inlines-hidden -fvisibility=hidden" \
CAIRO=True \
COLOR_PRINT=False \
DEMO=True \
SVG_RENDERER = True \
PGSQL2SQLITE = True \
SYSTEM_FONTS=/usr/share/fonts/truetype \
DESTDIR=$(CURDIR)/debian/tmp PREFIX=/usr

CFLAGS = -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	export CFLAGS += -O0
else
	export CFLAGS += -O3
endif

ifeq (,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
override_dh_auto_test:
else:
override_dh_auto_test:
	# the test suite does not 100% pass on all platforms/boost versions,
	# but the output is useful :)
	#make test-local || true; echo "Overall Test Exit Code: $?"
endif

override_dh_auto_configure:
	./configure $(SCONS_FLAGS) CUSTOM_CXXFLAGS="$(CFLAGS)"
	dh_auto_configure

# Do no build for every possible python version until this is working properly
# https://github.com/mapnik/mapnik-packaging/issues/3
#override_dh_auto_build:
#	set -e; \
#	for PYVER in $(shell pyversions -r); do \
#		./configure \
#		BOOST_PYTHON_LIB=`echo $$PYVER | sed 's/python\([0-9]\).\([0-9]\)/boost_python-py\1\2/'` \
#		PYTHON=`which $$PYVER`; \
#	done
#
#	dh_auto_build

override_dh_prep:
	dh_prep -Xdebian/tmp

override_dh_install:
	JOBS=2 make install
	dh_install

override_dh_auto_clean:
	-make distclean
	rm -rf config.py.backup

#	dh_auto_clean

override_dh_installexamples:
	dh_installexamples -Xdata/new
	find $(CURDIR)/debian/ -name "*.png" | xargs -r chmod -x

%:
#	dh_installexamples -Xdata/new
#	dh_install --sourcedir=debian/tmp
	dh $@
